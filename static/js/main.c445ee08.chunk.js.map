{"version":3,"sources":["groceries.js","App.js","index.js"],"names":["Groceries","state","groceries","purchased_groceries","purchased_message","handleChange","e","setState","target","id","value","handleSubmit","preventDefault","push","length","item","quantity","units","isPurchased","checkout","delete","filter","splice","startOver","window","location","reload","console","log","className","onSubmit","this","htmlFor","onChange","type","required","name","map","grocery","idx","onClick","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c445ee08.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './grocery.css';\n/*  \nConditionally render the grocery items based on whether or not they were purchased (ok to have hard coded values for isPurchased)\nAdd some style to your app\n*/\nexport class Groceries extends Component {\n  state = {\n    groceries: [],\n    purchased_groceries: [],\n    purchased_message: '',\n  };\n  handleChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.state.groceries.push({\n      id: this.state.groceries.length,\n      item: this.state.item,\n      quantity: this.state.quantity,\n      units: this.state.units,\n      isPurchased: false,\n    });\n    this.setState({\n      id: '',\n      item: '',\n      units: '',\n      quantity: 0,\n      isPurchased: false,\n    });\n    // });\n  };\n\n  componentDidMount() {\n    console.log('Component Mounted');\n  }\n  checkout = () => {\n    this.setState({\n      isPurchased: true,\n      purchased_groceries: this.state.groceries,\n      purchased_message: 'Thanks for Shopping!',\n    });\n  };\n\n  // Make inputs so that new items can be added\n  delete = (id) => {\n    this.setState({\n      groceries: this.state.groceries.filter((item) => {\n        return item.id !== id;\n      }),\n    });\n    this.state.groceries.splice(id);\n    // console.log(this.state.groceries);\n    this.setState({});\n    // }\n  };\n  startOver = () => {\n    window.location.reload();\n  };\n\n  render() {\n    // console.log('form data: ', this.state);\n\n    // Then render the item, quantity and units (12 pack, 1lb, 2 liters, etc.)\n    return (\n      <div>\n        <h1 className='site_title'>Make A Grocery List</h1>\n        <div className='all_container'>\n          {/* Form Container */}\n\n          <div className='form_container'>\n            <h2 className='container_title'>Add Groceries</h2>\n\n            <form id='input_form' onSubmit={this.handleSubmit}>\n              <lable htmlFor='item'>Item</lable>\n              <input\n                id='item'\n                onChange={this.handleChange}\n                value={this.state.item}\n                type='text'\n                required\n              />\n\n              <lable htmlFor='quantity'>Quantity</lable>\n              <input\n                id='quantity'\n                onChange={this.handleChange}\n                value={this.state.quantity}\n                type='text'\n                required\n              />\n              <lable htmlFor='quantity'>Select Unit</lable>\n              <select\n                name='unit'\n                id='units'\n                onChange={this.handleChange}\n                value={this.state.units}\n                required\n              >\n                <option value=''>select</option>\n                <option value='liters'>liters (L)</option>\n                <option value='millilitres'>millilitres (mL) </option>\n                <option value='grams'>grams (g)</option>\n                <option value='kilograms'>kilograms (kg)</option>\n              </select>\n              <button type='submit' value='Submit'>\n                Submit\n              </button>\n            </form>\n          </div>\n\n          {/* Display List Container */}\n          <div className='display_list_container'>\n            <h2 className='container_title'>Cart</h2>\n\n            {/* Map to iterate */}\n            <div>\n              <ol className='ol_info'>\n                {this.state.groceries.map((grocery, idx) => (\n                  <li key={idx}>\n                    Item:{' ' + grocery.item + ' '}\n                    Quantity:{' ' + grocery.quantity + ' '}\n                    Units:{grocery.units + ' '}\n                    <button onClick={() => this.delete(idx)}>Remove</button>\n                  </li>\n                ))}\n                <div className='checkout_clear_btns'>\n                  <button\n                    className='checkout_btn'\n                    onClick={() => {\n                      this.checkout();\n                      console.log(this.state.groceries);\n                    }}\n                  >\n                    Checkout\n                  </button>\n                  <button\n                    onClick={() => {\n                      this.startOver();\n                    }}\n                  >\n                    Start Over\n                  </button>\n                </div>\n              </ol>\n            </div>\n          </div>\n          {/* Checkout Container */}\n          <div className='checkout_container'>\n            <h2 className='container_title'>Purchased Groceries</h2>\n            <ol className='purchases'>\n              {this.state.purchased_groceries.map((grocery, idx) => (\n                <li key={idx}>\n                  {' ' + grocery.item + ' '}\n                  {' ' + grocery.quantity + ' '}\n                  {grocery.units + ' '}\n                </li>\n              ))}\n              <h3 className='thankYou'>{this.state.purchased_message}</h3>\n            </ol>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Groceries;\n","import './App.css';\nimport Groceries from './groceries';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Groceries />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}